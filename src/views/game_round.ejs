<!-- src/views/game_round.ejs - Fixed version -->
<% layout('layout', { css: ['game_round'] }) %>

<div class="game-container">
  <h2 class="text-center mb-4" id="game_status">
    <% if (gameData.status === 'waiting') { %>
      Game Lobby
    <% } else { %>
      Game Round <%= gameData.currentRound %>
    <% } %>
  </h2>
  
  <% if (gameData.status === 'waiting') { %>
    <div class="alert alert-info mb-4" id="Player_word">
      <h4 class="alert-heading">Waiting for game to start</h4>
      <p>The host will start the game once all players have joined.</p>
      <p class="mb-0">Game Code: <strong><%= gameData.code %></strong></p>
    </div>
    
    <h3>Players in Lobby</h3>
    <div class="row">
      <% gameData.players.forEach(player => { %>
        <div class="col-md-4 mb-3" id="<%= player.username %>">
          <div class="player-card">
            <h4><%= player.username %></h4>
            <% if (player.userId.toString() === gameData.players[0].userId.toString()) { %>
              <span class="badge badge-primary">Host</span>
            <% } %>
            <form class="Elimi-form">
              <input type="hidden" name="votedForId" value="<%= player.username %>">
              <button type="submit" class="vote-btn btn btn-danger btn-block" disabled>Vote to Eliminate</button>
            </form>
            
          </div>
        </div>
      <% }) %>
    </div>
    
    <% if (isHost) { %>
      <div class="alert alert-secondary mt-4 text-center" id="clue_cont">
        <form action="/start-game-round" method="POST" id="start_form">
          <input type="hidden" name="gameId" value="<%= gameData._id %>">
          <button type="submit" class="control-btn btn btn-primary btn-lg" id="start_btn">Start Game</button>
        </form>
      </div>
      <script>
        document.getElementById("start_form").addEventListener("submit", function(event) {
      
          event.preventDefault(); // Stop form from submitting normally

          socket.emit('start');
          
          this.remove();
          
        });

      </script>
      <div id="Clues"></div>
    <% } else { %>
      <div class="alert alert-secondary mt-4 text-center" id="clue_cont">
        <p class="mb-0">Waiting for the host to start the game...</p>
      </div>
      <div id="Clues"></div>
    <% } %>
  <% } else { %>
    <% if (userId && gameData.players) { %>
      <% const currentPlayer = gameData.players.find(p => p.userId.toString() === userId) %>
      <% if (currentPlayer) { %>
        <div class="player-info alert alert-info mb-4">
          <p><strong>Your Role:</strong> <%= currentPlayer.role.charAt(0).toUpperCase() + currentPlayer.role.slice(1) %></p>
          <% if (currentPlayer.word) { %>
            <p class="mb-0"><strong>Your Word:</strong> <%= currentPlayer.word %></p>
          <% } else if (currentPlayer.role === 'mrwhite') { %>
            <p class="mb-0"><strong>You are Mr. White!</strong> You don't know the word. Try to guess it from other players' descriptions.</p>
          <% } %>
        </div>
      <% } %>
    <% } %>

    <% if (gameData.eliminatedPlayers && gameData.eliminatedPlayers.length > 0) { %>
      <div class="eliminated-container mb-4">
        <h3>Eliminated Players</h3>
        <div class="row">
          <% gameData.eliminatedPlayers.forEach(player => { %>
            <div class="col-md-4 mb-3">
              <div class="eliminated-card">
                <h4><%= player.username %></h4>
                <p>Role: <%= player.role.charAt(0).toUpperCase() + player.role.slice(1) %></p>
                <p class="mb-0">Eliminated in Round: <%= player.round %></p>
              </div>
            </div>
          <% }) %>
        </div>
      </div>
    <% } %>

    <% if (isHost && allPlayersVoted && gameData.status === 'in-progress') { %>
      <div class="game-controls text-center mt-4 mb-4">
        <form action="/end-voting" method="POST">
          <input type="hidden" name="gameId" value="<%= gameData._id %>">
          <button type="submit" class="control-btn btn btn-primary btn-lg">End Voting & Continue</button>
        </form>
      </div>
    <% } %>
    
    <% if (playerHasVoted && !allPlayersVoted) { %>
      <div class="alert alert-info mt-4 text-center">
        <p class="mb-0">Waiting for all players to vote...</p>
      </div>
    <% } %>
    
    <% if (gameData.currentRound > 1 && gameData.eliminatedPlayers && gameData.eliminatedPlayers.length > 0) { %>
      <div class="alert alert-secondary mt-3">
        <p>Votes from previous round: </p>
        <ul class="vote-history">
          <% const prevRoundVotes = gameData.votes.filter(v => v.round === gameData.currentRound - 1) %>
          <% prevRoundVotes.forEach(vote => { %>
            <% const voter = gameData.players.find(p => p.userId.toString() === vote.voterId.toString()) %>
            <% const votedFor = gameData.players.find(p => p.userId.toString() === vote.votedForId.toString()) %>
            <li><%= voter ? voter.username : 'Unknown player' %> voted for <%= votedFor ? votedFor.username : 'Unknown player' %></li>
          <% }) %>
        </ul>
      </div>
    <% } %>
  <% } %>
  
  <div class="mt-4 text-center">
    <a href="/dashboard" class="btn btn-secondary">Back to Dashboard</a>
  </div>
</div>


<script src="/socket.io/socket.io.js"></script>
<script>
    // places to be updated
    const playerCont = document.getElementsByClassName('row')[0];
    

    const code = sessionStorage.getItem('gameId')
    const socket = io();
    socket.emit('joinGame', code);

    socket.on('message', msg=>{
      const temp = document.createElement('div');
      temp.innerHTML = `<div class="col-md-4 mb-3" id=${msg}>
                          <div class="player-card">
                            <h4>${msg}</h4>
                            <form class="Elimi-form">
                              <input type="hidden" name="votedForId" value=${msg}>
                              <button type="submit" class="vote-btn btn btn-danger btn-block" disabled>Vote to Eliminate</button>
                            </form>
                          </div>
                        </div>`;

      // Append the first child of the temporary container
      playerCont.appendChild(temp.firstElementChild);
    });
    
     
    socket.on('your_info', (data)=>{
      
      console.log(data.word);
      let word_cont = document.getElementById("Player_word");
      word_cont.innerHTML = `<h4>Game Started</h4>
                             <p>Your Word: <strong>${data.word}</strong></p>`;
      
      let game_round = document.getElementById("game_status");
      game_round.innerHTML = `GAME ROUND ${data.round}`;

      if(data.isMyTurn){

        let form_clue_cont = document.getElementById("clue_cont");
        form_clue_cont.innerHTML = `<form id='form_clue'>
                                        <h3>Your Turn</h3>
                                        Description:
                                        <input type='text' id='clue' required>
                                        <button type='submit'>Submit</button>
                                    </form>`;
        
        // Submit the description to other players.
        document.getElementById("form_clue").addEventListener("submit", function(event) {
          
          event.preventDefault(); // Stop form from submitting normally
          
          let clue = document.getElementById('clue').value;

          socket.emit('description', clue);
          
          this.remove();
        }); 

      }
    });
     
    socket.on('description', desc => {
      const temp = document.createElement('div');
      temp.innerHTML = `<p>${desc}</p>`
      document.getElementById('Clues').appendChild(temp.firstChild);
    })
    
    // show the form when is you turn
    socket.on('myTurn', ()=>{
      let form_clue_cont = document.getElementById("clue_cont");
      form_clue_cont.innerHTML = `<form id='form_clue'>
                                      <h3>Your Turn</h3>
                                      Description:
                                      <input type='text' id='clue' required>
                                      <button type='submit'>Submit</button>
                                  </form>`;
                                  
      // Submit the description to other players.
      document.getElementById("form_clue").addEventListener("submit", function(event) {
          
          event.preventDefault(); // Stop form from submitting normally
          
          let clue = document.getElementById('clue').value;

          socket.emit('description', clue);
          
          this.remove();
        }); 

    });
     

    socket.on('voteplayer', () => {
      document.querySelectorAll('.vote-btn').forEach(button => {
          button.disabled = false;
          button.style.backgroundColor = 'green';
        });

        document.querySelectorAll(".Elimi-form").forEach(form => {
          form.addEventListener("submit", function(event) {
            event.preventDefault();

            const formData = new FormData(this);
            socket.emit("eliminate", formData.get("votedForId"));

            document.querySelectorAll(".vote-btn").forEach(button => {
              button.disabled = true;
            });
          });
        });
    });
    
    
</script>
